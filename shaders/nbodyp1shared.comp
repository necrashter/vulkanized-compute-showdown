#version 450

#include "lib/nbodycommon.comp"

// Share data between computer shader invocations to speed up caluclations
shared vec4 sharedData[LOCAL_SIZE];

void main() {
    uint index = gl_GlobalInvocationID.x;
    if (index >= ubo.particleCount) return;

    vec4 pos = particles[index].pos;
    vec3 acc = vec3(0.0);

    for (uint i = 0; i < ubo.particleCount; i += LOCAL_SIZE) {
        if (i + gl_LocalInvocationID.x < ubo.particleCount) {
            sharedData[gl_LocalInvocationID.x] = particles[i + gl_LocalInvocationID.x].pos;
        } else {
            sharedData[gl_LocalInvocationID.x] = vec4(0.0);
        }

        memoryBarrierShared();
        barrier();

        for (uint j = 0; j < gl_WorkGroupSize.x; j++) {
            applyForce(pos, sharedData[j], acc);
        }

        memoryBarrierShared();
        barrier();
    }
	applyCameraForce(pos, acc);

    particles[index].vel.xyz += ubo.delta * acc;

    // Gradually shift the hue of the particle
    shiftColor(particles[index].vel.w);
}

